@model IEnumerable<weblamchoi.Models.Product>
@{
    ViewData["Title"] = "Trang chủ";
    var manufacturers = ViewBag.Manufacturers as List<weblamchoi.Models.Manufacturer>;
    var categories = ViewBag.Categories as List<weblamchoi.Models.Category>;
    var currentManufacturerId = ViewBag.SelectedManufacturerId as int?;
    var currentCategoryId = ViewBag.SelectedCategoryId as int?;
    var keyword = ViewBag.Keyword as string;
    var cartCount = ViewBag.CartCount as int? ?? 0;
    var minPrice = ViewBag.MinPrice as decimal? ?? 0;
    var maxPrice = ViewBag.MaxPrice as decimal? ?? 10000000;
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/home.css" />
   
}

<div class="main-banner container">
    <div class="banner-wrapper">
        <img src="https://cdn.tgdd.vn/News/Thumb/1522120/ca%CC%81-tha%CC%81ng-4-1200x628.jpg"
             alt="Banner Cá Tháng 4 – Săn Deal Bự" style="width:100%; height:110%;" />
    </div>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <div class="sidebar-section">
                <h5 class="sidebar-title"> Hãng sản xuất</h5>
                <ul class="list-group mb-4">
                    <li class="list-group-item @(currentManufacturerId == null ? "active" : "")">
                        <a asp-action="Index"
                           asp-route-categoryId="@currentCategoryId"
                           asp-route-keyword="@keyword"
                           asp-route-minPrice="@minPrice"
                           asp-route-maxPrice="@maxPrice"
                           class="list-group-link"><i class="fas fa-list me-2 industry-icon"></i> Tất cả</a>
                    </li>
                    @foreach (var m in manufacturers)
                    {
                        <li class="list-group-item @(m.ManufacturerID == currentManufacturerId ? "active" : "")">
                            <a asp-action="Index"
                               asp-route-manufacturerId="@m.ManufacturerID"
                               asp-route-categoryId="@currentCategoryId"
                               asp-route-keyword="@keyword"
                               asp-route-minPrice="@minPrice"
                               asp-route-maxPrice="@maxPrice"
                               class="list-group-link"><i class="fas fa-building me-2"></i> @m.ManufacturerName</a>
                        </li>
                    }
                </ul>

                <h5 class="sidebar-title"> Danh mục</h5>
                <ul class="list-group">
                    <li class="list-group-item @(currentCategoryId == null ? "active" : "")">
                        <a asp-action="Index"
                           asp-route-manufacturerId="@currentManufacturerId"
                           asp-route-keyword="@keyword"
                           asp-route-minPrice="@minPrice"
                           asp-route-maxPrice="@maxPrice"
                           class="list-group-link"><i class="fas fa-list me-2 industry-icon"></i> Tất cả</a>
                    </li>
                    @foreach (var c in categories)
                    {
                        <li class="list-group-item @(c.CategoryID == currentCategoryId ? "active" : "")">
                            <a asp-action="Index"
                               asp-route-categoryId="@c.CategoryID"
                               asp-route-manufacturerId="@currentManufacturerId"
                               asp-route-keyword="@keyword"
                               asp-route-minPrice="@minPrice"
                               asp-route-maxPrice="@maxPrice"
                               class="list-group-link"><i class="fas fa-tag me-2"></i> @c.CategoryName</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="col-md-9"> 
            <div class="filter-bar">
                <h5><i class="fas fa-filter me-2 industry-icon" margin-bottom: 20px> </i> Lọc giá</h5>
                <select id="price-filter" class="form-select">
                    <option value="0-10000000" selected="@(minPrice == 0 && maxPrice == 10000000)">Tất cả giá</option>
                    <option value="0-1000000" selected="@(minPrice == 0 && maxPrice == 1000000)">Dưới 1.000.000 ₫</option>
                    <option value="1000000-5000000" selected="@(minPrice == 1000000 && maxPrice == 5000000)">1.000.000 ₫ - 5.000.000 ₫</option>
                    <option value="5000000-10000000" selected="@(minPrice == 5000000 && maxPrice == 10000000)">5.000.000 ₫ - 10.000.000 ₫</option>
                    <option value="10000000-999999999" selected="@(minPrice == 10000000)">Trên 10.000.000 ₫</option>
                </select>
                <div class="discount-filter mt-2 mb-4">
                    <input type="checkbox" id="discounted-only"
                           class="form-check-input big-checkbox"
                           @(ViewBag.DiscountedOnly == true ? "checked" : "") />
                    <label for="discounted-only" class="form-check-label fw-bold">
                        <i class="fas fa-fire text-danger me-1"></i> Chỉ hiển thị sản phẩm giảm giá
                    </label>
                </div>

                <style>
                  
                </style>


            </div>

            @if (!Model.Any())
            {
                <div class="alert alert-info text-center" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i> Không tìm thấy sản phẩm nào phù hợp với tiêu chí.
                </div>
            }
            else
            {
                <div class="row" id="product-container">
                    @{
                        int index = 0;
                        foreach (var p in Model)
                        {
                            var isHidden = index >= 9 ? "d-none" : "";
                            <div class="col-md-4 col-sm-6 mb-4 product-item @isHidden" data-price="@p.Price" data-discounted="@(p.OriginalPrice != null && p.OriginalPrice > p.Price ? "true" : "false")">
                                <div class="card product-card h-100">
                                    <img src="@p.ImageURL" class="card-img-top" alt="@p.ProductName">
                                    <div class="card-body text-center">
                                        <h6 class="card-title" title="@p.ProductName"><i class="fas fa-box me-2 industry-icon"></i> @p.ProductName</h6>
                                        @if (p.OriginalPrice != null && p.OriginalPrice > p.Price)
                                        {
                                            <div class="price-container">
                                                <span class="price-current"><i class="fas fa-tag me-1"></i> @p.Price.ToString("N0") ₫</span>
                                                <span class="price-original">@p.OriginalPrice.Value.ToString("N0") ₫</span>
                                                <span class="discount-badge">
                                                    <i class="fas fa-fire me-1"></i> -@((100 - (p.Price / p.OriginalPrice.Value * 100)).ToString("N0"))%
                                                </span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="price-container">
                                                <span class="price-current"><i class="fas fa-tag me-1"></i> @p.Price.ToString("N0") ₫</span>
                                            </div>
                                        }
                                        <p class="stock-info">
                                            @if (p.Quantity <= 0)
                                            {
                                                <span class="text-danger fw-bold"><i class="fas fa-times-circle me-1"></i> Hết hàng</span>
                                            }
                                            else
                                            {
                                                <span><i class="fas fa-fire me-1"></i> Còn lại: @p.Quantity sản phẩm</span>
                                            }
                                        </p>
                                        <p class="text-muted small"><i class="fas fa-industry me-1"></i> @(p.Manufacturer?.ManufacturerName ?? "N/A") - <i class="fas fa-folder me-1"></i> @(p.Category?.CategoryName ?? "N/A")</p>
                                    </div>
                                    <div class="card-footer text-center">
                                        <a asp-controller="Products" asp-action="Details" asp-route-id="@p.ProductID"
                                           class="btn btn-primary"><i class="fas fa-eye me-2"></i> Xem chi tiết</a>
                                       
                                    </div>
                                </div>
                            </div>
                            index++;
                        }
                    }
                </div>

                @if (Model.Count() > 9)
                {
                    <div class="text-center mt-4">
                        <button id="btn-show-more" class="btn-show-more">
                            <i class="fas fa-chevron-down me-2"></i> Xem thêm sản phẩm
                        </button>
                    </div>
                }
            }
        </div>
    </div>
</div>

<!-- Chatbox button -->
<div id="ai-chat-button" style="
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        background-color: #0084FF;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        z-index: 1000;">
    <i class="fas fa-robot fa-lg" style="color:white;"></i>
</div>

<!-- Chatbox popup -->
<div id="ai-chat-box" style="
        position: fixed;
        bottom: 90px;
        right: 20px;
        width: 350px;
        max-height: 500px;
        background: white;
        border-radius: 10px;
        border: 1px solid #ccc;
        display: none;
        flex-direction: column;
        box-shadow: 0 4px 16px rgba(0,0,0,0.3);
        z-index: 1000;">
    <div style="background:#0084FF; color:white; padding:10px; border-top-left-radius:10px; border-top-right-radius:10px; display:flex; justify-content:space-between; align-items:center;">
        <span>Chat AI</span>
        <span id="ai-chat-close" style="cursor:pointer;"><i class="fas fa-times"></i></span>
    </div>
    <div id="ai-chat-messages" style="flex:1; overflow-y:auto; padding:10px;"></div>
    <div style="padding:10px; border-top:1px solid #ccc; display:flex;">
        <input type="text" id="ai-chat-input" placeholder="Nhập tin nhắn..." style="flex:1; padding:5px; border-radius:5px; border:1px solid #ccc;" />
        <button id="ai-chat-send" style="margin-left:5px; background:#0084FF; color:white; border:none; border-radius:5px; padding:5px 10px;">Gửi</button>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
    <style>
        .user-msg {
            margin: 5px;
            padding: 8px;
            background-color: #e1f5fe;
            border-radius: 5px;
            text-align: right;
        }

        .ai-msg {
            margin: 5px;
            padding: 8px;
            background-color: #f5f5f5;
            border-radius: 5px;
            text-align: left;
        }

        .btn-show-more {
            background: linear-gradient(90deg, #4f46e5, #7c3aed);
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-show-more:hover {
            background: linear-gradient(90deg, #4338ca, #6d28d9);
            transform: translateY(-2px);
        }
    </style>
    <script>
        // Show more products
        document.getElementById('btn-show-more')?.addEventListener('click', function () {
            const hiddenItems = document.querySelectorAll('.product-item.d-none');
            const countToShow = 9;

            let shown = 0;
            for (let item of hiddenItems) {
                if (shown >= countToShow) break;
                item.classList.remove('d-none');
                shown++;
            }

            if (document.querySelectorAll('.product-item.d-none').length === 0) {
                this.style.display = 'none';
            }
        });

        // Price and discount filter
        const priceFilter = document.getElementById('price-filter');
        const discountedOnlyCheckbox = document.getElementById('discounted-only');

        function applyFilters() {
            const [minPrice, maxPrice] = priceFilter.value.split('-').map(Number);
            const showDiscountedOnly = discountedOnlyCheckbox.checked;

            const products = document.querySelectorAll('.product-item');
            products.forEach(product => {
                const price = Number(product.dataset.price);
                const isDiscounted = product.dataset.discounted === 'true';

                const priceInRange = price >= minPrice && price <= maxPrice;
                const passesDiscountFilter = !showDiscountedOnly || isDiscounted;

                if (priceInRange && passesDiscountFilter) {
                    product.classList.remove('d-none');
                } else {
                    product.classList.add('d-none');
                }
            });

            // Update URL
            const url = new URL(window.location);
            url.searchParams.set('minPrice', minPrice);
            url.searchParams.set('maxPrice', maxPrice);
            url.searchParams.set('discountedOnly', showDiscountedOnly);
            window.history.pushState({}, '', url);
        }

        priceFilter.addEventListener('change', applyFilters);
        discountedOnlyCheckbox.addEventListener('change', applyFilters);

        // Initial filter application
        applyFilters();

        // Chatbox functionality
        const chatButton = document.getElementById('ai-chat-button');
        const chatBox = document.getElementById('ai-chat-box');
        const chatClose = document.getElementById('ai-chat-close');
        const chatMessages = document.getElementById('ai-chat-messages');
        const chatInput = document.getElementById('ai-chat-input');
        const chatSend = document.getElementById('ai-chat-send');

        chatButton.addEventListener('click', () => {
            chatBox.style.display = 'flex';
            chatInput.focus();
        });

        chatClose.addEventListener('click', () => {
            chatBox.style.display = 'none';
        });

        // SignalR hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .withAutomaticReconnect()
            .build();

        connection.start().then(() => {
            console.log("SignalR Connected");
        }).catch(err => {
            console.error("SignalR Connection Error:", err);
        });

        connection.on("ReceiveMessage", (user, message) => {
            const p = document.createElement('p');
            p.textContent = `${user}: ${message}`;
            p.className = user === "Bạn" ? 'user-msg' : 'ai-msg';
            chatMessages.appendChild(p);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        });

        chatSend.addEventListener('click', async () => {
            const msg = chatInput.value.trim();
            if (!msg) return;

            try {
                await connection.invoke("SendMessage", "Bạn", msg);
                chatInput.value = '';
            } catch (err) {
                console.error("Send Message Error:", err);
                const p = document.createElement('p');
                p.textContent = "System: Lỗi khi gửi tin nhắn, vui lòng thử lại.";
                p.className = 'ai-msg';
                chatMessages.appendChild(p);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        });

        chatInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                chatSend.click();
            }
        });
    </script>
}