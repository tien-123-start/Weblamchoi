@model List<weblamchoi.Models.Cart>

@{
    var totalAmount = ViewBag.TotalAmount ?? 0m; // Default to 0m if null
    var discountAmount = ViewBag.DiscountAmount ?? 0m; // Default to 0m if null
    var totalAfterDiscount = ViewBag.TotalAfterDiscount ?? totalAmount; // Default to totalAmount if null
    var voucherCode = ViewData["AppliedVoucherCode"] as string ?? string.Empty; // Default to empty string if null

    // Lấy discount % (nếu có) từ ViewBag hoặc model, mặc định 0m
    decimal discountPercentage = ViewBag.DiscountPercentage ?? 0m;

    // Tách sản phẩm chính (có BonusProduct) và sản phẩm khuyến mãi
    var mainProducts = Model?.Where(c => c.Product != null && c.Product.BonusProduct != null).ToList() ?? new List<Cart>();
    var bonusProducts = Model?.Where(c => c.Product != null && Model.Any(mp => mp.Product?.BonusProduct?.ProductID == c.ProductID)).ToList() ?? new List<Cart>();
    var standaloneProducts = Model?.Except(mainProducts).Except(bonusProducts).ToList() ?? new List<Cart>(); // Sản phẩm không liên quan
}

<link rel="stylesheet" href="/css/cart.css">
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>
        @Html.Raw(TempData["SuccessMessage"])
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
<div class="page-header">
    <h2><i class="bi bi-cart3"></i> Giỏ hàng của bạn</h2>
</div>

<div class="cart-container">
    @if (Model == null || !Model.Any())
    {
        <div class="empty-cart">
            <i class="bi bi-cart-x"></i>
            <h3>Giỏ hàng trống</h3>
            <p>Bạn chưa có sản phẩm nào trong giỏ hàng.</p>
            <a href="/Home/Index" class="btn btn-primary">
                <i class="bi bi-arrow-left"></i> Tiếp tục mua sắm
            </a>
        </div>
    }
    else
    {
        <table class="table modern-table">
            <thead>
                <tr>
                    <th><i class="bi bi-box"></i> Sản phẩm</th>
                    <th><i class="bi bi-tag"></i> Giá</th>
                    <th><i class="bi bi-123"></i> Số lượng</th>
                    <th><i class="bi bi-calculator"></i> Thành tiền</th>
                    <th><i class="bi bi-trash"></i> Xóa</th>
                </tr>
            </thead>
            <tbody>
                <!-- Hiển thị sản phẩm chính và sản phẩm khuyến mãi liên quan -->
                @foreach (var mainItem in mainProducts)
                {
                    if (mainItem?.Product != null)
                    {
                        <tr>
                            <td>
                                <div class="product-info-vertical">
                                    <img src="@(string.IsNullOrEmpty(mainItem.Product.ImageURL) ? "/images/default.png" : mainItem.Product.ImageURL)" class="product-image" alt="@mainItem.Product.ProductName" />
                                    <div class="product-name">@mainItem.Product.ProductName</div>
                                </div>
                            </td>
                            <td>
                                <div class="product-price">
                                    <del>@mainItem.Product.Price.ToString("N0") ₫</del>
                                    <br />
                                    <strong>@(mainItem.Price.HasValue? mainItem.Price.Value.ToString("N0") : mainItem.Product.Price.ToString("N0")) ₫</strong>
                                </div>
                            </td>
                            <td>
                                <form method="post" asp-action="UpdateQuantity" class="quantity-controls">
                                    <input type="hidden" name="cartId" value="@mainItem.CartID" />
                                    <button type="submit" name="action" value="decrease" class="quantity-btn" @(mainItem.Quantity <= 1 ? "disabled" : "")>−</button>
                                    <div class="quantity-display">@mainItem.Quantity</div>
                                    <button type="submit" name="action" value="increase" class="quantity-btn">+</button>
                                </form>
                            </td>
                            <td>
                                <div class="product-price">@((mainItem.Price.HasValue ? mainItem.Price.Value * mainItem.Quantity : mainItem.Product.Price * mainItem.Quantity).ToString("N0")) ₫</div>
                            </td>
                            <td>
                                <form asp-action="Remove" method="post">
                                    <input type="hidden" name="cartId" value="@mainItem.CartID" />
                                    <button type="submit" class="remove-btn" onclick="return confirm('Bạn có chắc muốn xóa sản phẩm này?')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>

                        <!-- Hiển thị sản phẩm khuyến mãi liên quan ngay bên dưới -->
                        var relatedBonus = bonusProducts.FirstOrDefault(b => b.ProductID == mainItem.Product.BonusProduct?.ProductID);
                        if (relatedBonus != null)
                        {
                            <tr class="bonus-product-row">
                                <td>
                                    <div class="product-info-vertical">
                                        <img src="@(string.IsNullOrEmpty(relatedBonus.Product.ImageURL) ? "/images/default.png" : relatedBonus.Product.ImageURL)" class="product-image" alt="@relatedBonus.Product.ProductName" />
                                        <div class="product-name">
                                            @relatedBonus.Product.ProductName <span class="badge bg-success">Khuyến mãi</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="product-price">@(relatedBonus.Price.HasValue? relatedBonus.Price.Value.ToString("N0") : relatedBonus.Product.Price.ToString("N0")) ₫</div>
                                </td>
                                <td>
                                    <div class="quantity-display">@relatedBonus.Quantity</div>
                                </td>
                                <td>
                                    <div class="product-price">@((relatedBonus.Price.HasValue ? relatedBonus.Price.Value * relatedBonus.Quantity : relatedBonus.Product.Price * relatedBonus.Quantity).ToString("N0")) ₫</div>
                                </td>
                                <td>
                                    <!-- Không có nút xóa riêng cho sản phẩm khuyến mãi -->
                                </td>
                            </tr>
                        }
                    }
                }

                <!-- Hiển thị các sản phẩm độc lập (không có khuyến mãi) -->
                @foreach (var item in standaloneProducts)
                {
                    if (item?.Product != null)
                    {
                        <tr>
                            <td>
                                <div class="product-info-vertical">
                                    <img src="@(string.IsNullOrEmpty(item.Product.ImageURL) ? "/images/default.png" : item.Product.ImageURL)" class="product-image" alt="@item.Product.ProductName" />
                                    <div class="product-name">@item.Product.ProductName</div>
                                </div>
                            </td>
                            <td>
                                <div class="product-price">
                                    <del>@item.Product.Price.ToString("N0") ₫</del>
                                    <br />
                                    <strong>@(item.Price.HasValue? item.Price.Value.ToString("N0") : item.Product.Price.ToString("N0")) ₫</strong>
                                </div>
                            </td>
                            <td>
                                <form method="post" asp-action="UpdateQuantity" class="quantity-controls">
                                    <input type="hidden" name="cartId" value="@item.CartID" />
                                    <button type="submit" name="action" value="decrease" class="quantity-btn" @(item.Quantity <= 1 ? "disabled" : "")>−</button>
                                    <div class="quantity-display">@item.Quantity</div>
                                    <button type="submit" name="action" value="increase" class="quantity-btn">+</button>
                                </form>
                            </td>
                            <td>
                                <div class="product-price">@((item.Price.HasValue ? item.Price.Value * item.Quantity : item.Product.Price * item.Quantity).ToString("N0")) ₫</div>
                            </td>
                            <td>
                                <form asp-action="Remove" method="post">
                                    <input type="hidden" name="cartId" value="@item.CartID" />
                                    <button type="submit" class="remove-btn" onclick="return confirm('Bạn có chắc muốn xóa sản phẩm này?')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
</div>

<div class="summary-section">
    <h4><i class="bi bi-receipt"></i> Tóm tắt đơn hàng</h4>
    <div class="summary-row">
        <span>Tổng tiền</span>
        <strong>@totalAmount.ToString("N0") ₫</strong>
    </div>
    @if (discountAmount > 0)
    {
        <div class="summary-row discount">
            <span>Giảm giá (Voucher)</span>
            <strong>-@discountAmount.ToString("N0") ₫</strong>
        </div>
    }

    <div class="summary-row use-points">
        <label>
            <input type="checkbox" id="usePointsCheckbox" value="1" /> Sử dụng điểm tích lũy (@(ViewBag.UserPoints ?? 0) điểm)
        </label>
    </div>
    <input type="hidden" id="usePointsInput" name="usePoints" value="0" />

    <div class="summary-row total">
        <span>Tổng thanh toán</span>
        <strong>@totalAfterDiscount.ToString("N0") ₫</strong>
    </div>
</div>

<div class="mt-3">
    <a href="/Home/Index" class="home-link">
        <i class="bi bi-arrow-left"></i> Về trang chủ
    </a>
</div>

<div class="voucher-section">
    <h4><i class="bi bi-ticket-perforated"></i> Mã giảm giá</h4>
    <form method="post" asp-action="ApplyVoucher" class="d-flex align-items-center gap-2">
        <input type="text" name="voucherCode" class="form-control voucher-input" placeholder="Nhập mã giảm giá" value="@voucherCode" @(string.IsNullOrEmpty(voucherCode) ? "" : "readonly") />
        <button type="submit" class="voucher-btn" @(string.IsNullOrEmpty(voucherCode) ? "" : "disabled")>Áp dụng</button>
    </form>
    @if (!string.IsNullOrEmpty(voucherCode))
    {
        <div class="applied-voucher">
            <div class="d-flex align-items-center">
                <i class="bi bi-check-circle-fill me-2"></i>
                <strong>Đã áp dụng: @voucherCode</strong>
            </div>
            <form method="post" asp-action="RemoveVoucher" class="d-inline">
                <button type="submit" class="remove-voucher-btn">Bỏ</button>
            </form>
        </div>
    }
    @if (TempData["VoucherMessage"] != null)
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i> @TempData["VoucherMessage"]
        </div>
    }
    @if (TempData["VoucherError"] != null)
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle"></i> @TempData["VoucherError"]
        </div>
    }
</div>

<div class="payment-section">
    <h4><i class="bi bi-credit-card"></i> Phương thức thanh toán</h4>
    <div class="row mt-3">
        <div class="col-md-6 d-flex">
            <div class="payment-card online flex-fill">
                <h5><i class="bi bi-credit-card"></i> Thanh toán Online</h5>
                <p>Bạn có thể thanh toán qua Momo hoặc VNPAY.</p>
                <form method="post" asp-action="CheckoutOnline">
                    <div class="mb-3">
                        <label class="form-label">Chọn cổng thanh toán</label>
                        <select name="paymentGateway" class="form-select payment-select" required>
                            <option value="">-- Chọn --</option>
                            <option value="momo">Momo</option>
                            <option value="vnpay">VNPAY</option>
                        </select>
                    </div>
                    <input type="hidden" name="voucherCode" value="@voucherCode" />
                    <button type="submit" class="payment-btn">Thanh toán</button>
                </form>
            </div>
        </div>
        <div class="col-md-6 d-flex">
            <div class="payment-card store flex-fill">
                <h5><i class="bi bi-shop"></i> Thanh toán tại cửa hàng</h5>
                <p>Đặt hàng và thanh toán khi nhận sản phẩm tại cửa hàng.</p>
                <div id="loadingEffect" class="loading-effect d-none">
                    <div class="spinner-border" style="width: 2rem; height: 2rem;"></div>
                    <p class="mt-2">Đang xử lý...</p>
                </div>
                <div id="successEffect" class="success-effect d-none">
                    <i class="bi bi-check-circle" style="font-size: 2rem;"></i>
                    <p class="mt-2 fw-bold">Thành công!</p>
                </div>
                <form id="paymentForm" asp-action="Checkout" method="post">
                    <input type="hidden" name="paymentMethod" value="Tại cửa hàng" />
                    <input type="hidden" name="voucherCode" value="@voucherCode" />
                    <button type="button" id="confirmPaymentBtn" class="payment-btn">Xác nhận</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Hiệu ứng nút số lượng
        document.querySelectorAll('.quantity-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                this.style.transform = 'scale(0.95)';
                setTimeout(() => this.style.transform = 'scale(1)', 100);
            });
        });

        // Thanh toán tại cửa hàng
        const confirmPaymentBtn = document.getElementById('confirmPaymentBtn');
        const paymentForm = document.getElementById('paymentForm');
        const loadingEffect = document.getElementById('loadingEffect');
        const successEffect = document.getElementById('successEffect');

        if (confirmPaymentBtn) {
            confirmPaymentBtn.addEventListener('click', function () {
                paymentForm.style.display = 'none';
                loadingEffect.classList.remove('d-none');
                setTimeout(() => {
                    loadingEffect.classList.add('d-none');
                    successEffect.classList.remove('d-none');
                    setTimeout(() => paymentForm.submit(), 1000);
                }, 1500);
            });
        }

        // 💰 Tính tổng thanh toán khi dùng điểm
        const usePointsCheckbox = document.getElementById('usePointsCheckbox');
        const totalDisplay = document.querySelector('.summary-row.total strong');
        const totalAfterDiscountValue = parseFloat("@(totalAfterDiscount.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))") || 0; // Use F2 for decimal precision
        const userPoints = parseInt("@(ViewBag.UserPoints ?? 0)", 10) || 0;
        const usePointsInput = document.getElementById('usePointsInput');

        if (usePointsCheckbox) {
            usePointsCheckbox.addEventListener('change', function () {
                let newTotal = totalAfterDiscountValue;
                const pointValue = userPoints * 1000; // 1 điểm = 1.000₫

                if (this.checked && pointValue > 0) {
                    newTotal = Math.max(totalAfterDiscountValue - pointValue, 0);
                    usePointsInput.value = "1";
                } else {
                    usePointsInput.value = "0";
                }

                totalDisplay.textContent = newTotal.toLocaleString('vi-VN') + ' ₫';
            });
        }
    });
</script>